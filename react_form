//Gestion des formulaires
import React, { useState } from 'react';

const MyForm = () => {
  const [value, setValue] = useState('');

  const handleChange = (event) => {
    setValue(event.target.value);
  };

  const handleSubmit = (event) => {
    event.preventDefault();
    alert('A name was submitted: ' + value);
  };

  return (
    <form onSubmit={handleSubmit}>
      <label>
        Name:
        <input type="text" value={value} onChange={handleChange} />
      </label>
      <input type="submit" value="Submit" />
    </form>
  );
};

export default MyForm;


//form base

import "./App.css";
import { useState } from "react";

export default function EnrolmentForm() {

 const [firstName,setFirstName] = useState('')
 const [lastName,setLastName] = useState('')
 const [recevoirMessage,setRecevoirMessage] = useState('')

 const handleEnvoyer = (event) => {
    setRecevoirMessage(`bienvenu ${firstName} ${lastName}`)
    event.preventDefault()
 }

  return (
    <div>
      <form className="enrolForm"  onSubmit={handleEnvoyer} >
        <h1>Student Details</h1>
        <label id="studentMsg" className="message">First name:</label>
        <input type="text" name="fname" onChange={(event) => setFirstName(event.target.value)} />
        <br/>
        <br/>
        <label id="studentMsg" className="message">Last name:</label>
        <input type="text" name="lname" onChange={(event) => setLastName(event.target.value)}  />
        <br/>
        <br/>
        <input  type="submit" value="Submit"/>
        <br/>
        <label id="studentMsg" className="message"> {recevoirMessage}</label>
      </form>
    </div>
  )
}

/controlled vs incontrolled
class NameForm extends React.Component {
  constructor(props) {
    super(props);
    this.state = { value: '' };

    this.handleChange = this.handleChange.bind(this);
    this.handleSubmit = this.handleSubmit.bind(this);
  }

  handleChange(event) {
    this.setState({ value: event.target.value });
  }

  handleSubmit(event) {
    alert('A name was submitted: ' + this.state.value);
    event.preventDefault();
  }

  render() {
    return (
      <form onSubmit={this.handleSubmit}>
        <label>
          Name:
          <input type="text" value={this.state.value} onChange={this.handleChange} />
        </label>
        <input type="submit" value="Submit" />
      </form>
    );
  }
}
